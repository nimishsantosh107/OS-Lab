exit(STATUS)								0 or 1

DIR *p = opendir(".");   					!=NULL
struct dirent *d = readdir(p);  			!=NULL then NEXT

struct stat fileStat;
stat(d->d_name, &fileStat)					returns struct of file info
fileStat.st_mode & S_ISUSR					bitwise & on st_mode(int) and macro
	
int fd = creat(path , O_CREAT | 0666);		-1 on err else FD
int fd = open(path , O_WRONLY | O_TRUNC);	-1 on err else FD

while(read(fd , &c , 1))					void - reads fd 1 by 1 to *c till END
write(fd , &c , 1);							void - writes *c to fd (length 1)

int count = argv[1][1]-'0';					for head/tail



 
int id = shmget(101 , 10 , IPC_CREAT | 0666);
*a = shmat(id,NULL,0);
shmdt(a);
shmctl(id , IPC_RMID , NULL);



int globalvar;
void* run(void* param){
	int a = atoi(param);
	return NULL
}
pthread_t thread;
pthread_attr_t attr;
pthread_attr_init(&attr);
pthread_create(&thread,&attr,run,argv[1]);
pthread_join(thread,NULL);



sem_t *sem;
sem = sem_open("name" , O_CREAT | O_EXCL, 0666 , value(bin or count));
sem_unlink("name");
sem_wait(sem);
sem_post(sem);
sem_destroy(sem);